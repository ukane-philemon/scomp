package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"
	"fmt"

	"github.com/ukane-philemon/scomp/graph/model"
)

// CreateAdminAccount is the resolver for the createAdminAccount field.
func (r *mutationResolver) CreateAdminAccount(ctx context.Context, username string, password string) (string, error) {
	panic(fmt.Errorf("not implemented: CreateAdminAccount - createAdminAccount"))
}

// Login is the resolver for the login field.
func (r *mutationResolver) Login(ctx context.Context, username string, password string) (*model.LoginResponse, error) {
	panic(fmt.Errorf("not implemented: Login - login"))
}

// CreateClass is the resolver for the createClass field.
func (r *mutationResolver) CreateClass(ctx context.Context, class model.NewClass) (string, error) {
	panic(fmt.Errorf("not implemented: CreateClass - createClass"))
}

// AddStudentRecord is the resolver for the addStudentRecord field.
func (r *mutationResolver) AddStudentRecord(ctx context.Context, classID string, student model.StudentRecordInput) (string, error) {
	panic(fmt.Errorf("not implemented: AddStudentRecord - addStudentRecord"))
}

// ComputeClassReport is the resolver for the computeClassReport field.
func (r *mutationResolver) ComputeClassReport(ctx context.Context, classID string) (*model.ClassInfo, error) {
	panic(fmt.Errorf("not implemented: ComputeClassReport - computeClassReport"))
}

// ClassInfo is the resolver for the classInfo field.
func (r *queryResolver) ClassInfo(ctx context.Context, classID string) (*model.ClassInfo, error) {
	panic(fmt.Errorf("not implemented: ClassInfo - classInfo"))
}

// Classes is the resolver for the classes field.
func (r *queryResolver) Classes(ctx context.Context, hasReport *bool) ([]*model.ClassInfo, error) {
	panic(fmt.Errorf("not implemented: Classes - classes"))
}

// StudentRecord is the resolver for the studentRecord field.
func (r *queryResolver) StudentRecord(ctx context.Context, classID string, studentID string) (*model.StudentRecord, error) {
	panic(fmt.Errorf("not implemented: StudentRecord - studentRecord"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
