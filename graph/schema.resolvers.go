package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"
	"fmt"

	"github.com/ukane-philemon/scomp/graph/model"
)

// ComputeClassGrade is the resolver for the computeClassGrade field.
func (r *mutationResolver) ComputeClassGrade(ctx context.Context, input model.NewClass) (*model.ClassReport, error) {
	return &model.ClassReport{
		HighestStudentScore:             771,
		HighestStudentScoreAsPercentage: 70.1,
		LowestStudentScore:              121,
		LowestStudentScoreAsPercentage:  12.2,
		StudentsReport: []*model.StudentReport{
			{
				ClassPosition: 1,
				ClassGrade:    "",
				SubjectReport: []*model.StudentSubjectReport{
					{
						Name:     "Physics",
						Score:    50,
						Grade:    "A",
						Position: 1,
					},
				},
				TotalScore:           771,
				TotalScorePercentage: 70.5,
			},
			{
				ClassPosition: 2,
				ClassGrade:    "A",
				SubjectReport: []*model.StudentSubjectReport{
					{
						Name:     "Physics",
						Score:    50,
						Grade:    "A",
						Position: 1,
					},
				},
				TotalScore:           770,
				TotalScorePercentage: 70.2,
			},
		},
	}, nil
}

// ClassReport is the resolver for the classReport field.
func (r *queryResolver) ClassReport(ctx context.Context, classID string) (*model.ClassReport, error) {
	return &model.ClassReport{
		HighestStudentScore:             771,
		HighestStudentScoreAsPercentage: 70.1,
		LowestStudentScore:              121,
		LowestStudentScoreAsPercentage:  12.2,
		StudentsReport: []*model.StudentReport{
			{
				ClassPosition: 1,
				ClassGrade:    "",
				SubjectReport: []*model.StudentSubjectReport{
					{
						Name:     "Physics",
						Score:    50,
						Grade:    "A",
						Position: 1,
					},
				},
				TotalScore:           771,
				TotalScorePercentage: 70.5,
			},
			{
				ClassPosition: 2,
				ClassGrade:    "A",
				SubjectReport: []*model.StudentSubjectReport{
					{
						Name:     "Physics",
						Score:    50,
						Grade:    "A",
						Position: 1,
					},
				},
				TotalScore:           770,
				TotalScorePercentage: 70.2,
			},
		},
	}, nil
}

// StudentReport is the resolver for the studentReport field.
func (r *queryResolver) StudentReport(ctx context.Context, classID string, studentID string) (*model.StudentReport, error) {
	return &model.StudentReport{
		ClassPosition: 1,
		ClassGrade:    "",
		SubjectReport: []*model.StudentSubjectReport{
			{
				Name:     "Physics",
				Score:    50,
				Grade:    "A",
				Position: 1,
			},
		},
		TotalScore:           771,
		TotalScorePercentage: 70.5,
	}, nil
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//   - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//     it when you're done.
//   - You have helper methods in this file. Move them out to keep these resolver files clean.
func (r *queryResolver) StudentReports(ctx context.Context) ([]*model.StudentReport, error) {
	panic(fmt.Errorf("not implemented: StudentReports - studentReports"))
}
